<!doctype html>
<html>
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
	<title>Minimal Ogv.js example</title>

	<script src="lib/ogv.js?version=OGV_VERSION"></script>
</head>
<body>

<div id="videoarea"></div>

<select onchange="runstuff();switchmedia(this)">
	<option value="media/llama-drama-av1.webm">Llama drama (AV1, Opus; 180p)</option>
	<option value="media/curiosity.ogv">Curiosity's Seven Minutes of Terror (Vorbis, Theora; 160p)</option>
	<option value="media/ehren-paper_lights-96.opus">Ehren - Paper Lights (Opus)</option>
	<option value="media/pixel_aspect_ratio.ogg">Theora Test suite pixel_aspect_ratio.ogg</option>
</select>
<div>
<button onclick="runstuff();play(sampleFile);">Play</button><button onclick="runstuff();pause();">Pause/Unpause</button>
</div>


<script language="JavaScript">
var ran = false;
var player = null;
var paused = false;
var sampleFile = 'media/llama-drama-av1.webm';

var vid;
var audioContext;
var audioDestination;

var captureStream;
var captureTrack;

var audioStream;
var audioTrack;
var combinedStream;

function runstuff() {
	if (ran) {
		return;
	}
	ran = true;

	audioContext = OGVPlayer.initSharedAudioContext();
	audioDestination = audioContext.createMediaStreamDestination();


	player = new OGVPlayer({
		audioContext: audioContext,
		audioDestination: audioDestination
	});
	document.getElementById("videoarea").appendChild(player);

	vid = document.createElement('video');
	vid.controls = true;
	vid.playsInline = true;
	vid.addEventListener('play', function(event) {
		player.play();
	});
	vid.addEventListener('pause', function(event) {
		player.pause();
	});
	document.getElementById("videoarea").appendChild(vid);

	player.addEventListener('loadedmetadata', function(_event) {
		console.log('loaded');
		var canvas = player.querySelector('canvas');
		captureStream = canvas.captureStream(0);
		captureTrack = captureStream.getVideoTracks()[0];
		if (!captureStream.requestFrame && !captureTrack.requestFrame) {
			console.log('warning: pulling at 60fps because no requestFrame support');
			captureStream = canvas.captureStream(60);		
		}

		if (player._codec.hasAudio) {
			audioStream = audioDestination.stream;
			audioTrack = audioStream.getAudioTracks()[0];

			combinedStream = new MediaStream([captureTrack, audioTrack]);
			vid.srcObject = combinedStream;
		} else {
			audioStream = null;
			audioTrack = null;
			combinedStream = null;
			vid.srcObject = captureStream;
		}
	});

	player.addEventListener('play', function(_event) {
		vid.play();
	});
	player.addEventListener('pause', function(_event) {
		vid.pause();
	});


	// These don't apply to the in-browser controls,
	// unfortunately.
	// However they seem to work for external controls.
	// Be warned that while the output vid is paused,
	// it won't update in response to seeks. :(
	/*
	Object.defineProperties(vid, {
		currentTime: {
			get: function() {
				return player.currentTime;
			},
			set: function(val) {
				player.currentTime = val;
			},
		},
		buffered: {
			get: function() {
				return player.buffered;
			}
		},
		seekable: {
			get: function() {
				return player.seekable;
			}
		},
		seeking: {
			get: function() {
				return player.seeking;
			}
		},
		networkState: {
			get: function() {
				return player.networkState;
			}
		},
		duration: {
			get: function() {
				return player.duration;
			}
		},
	});
	*/

	player.addEventListener('framecallback', function(_event) {
		if (captureStream && captureStream.requestFrame) {
			// Firefox has it here
			captureStream.requestFrame();
		} else if (captureTrack && captureTrack.requestFrame) {
			// Chrome and Safari have it here
			captureTrack.requestFrame();
		}
	});

	function play(src) {
		//player = new OgvSwfPlayer();
		//player = document.createElement('video');
		player.src = src;
		player.play();
		vid.play();
	}

	function pause() {
		if(player) {
			if(!paused) {
				player.pause();
				vid.pause();
				paused = true;
			} else {
				player.play();
				vid.play();
				paused = false;
			}
		}
	}

	function switchmedia(src) {
		sampleFile = src.value;
		play(sampleFile);
	}

	window.play = play;
	window.pause = pause;
	window.switchmedia = switchmedia;

}
</script>

</body></html>
